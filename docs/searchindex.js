Search.setIndex({"docnames": ["index", "modules/modules", "modules/optibeam"], "filenames": ["index.rst", "modules/modules.rst", "modules/optibeam.rst"], "titles": ["Welcome to OptiBeam\u2019s documentation!", "optibeam", "optibeam package"], "terms": {"i": [0, 2], "python": [0, 2], "packag": [0, 1], "provid": [0, 2], "process": [0, 2], "imag": [0, 2], "analyz": 0, "data": [0, 2], "visual": [0, 1], "result": [0, 2], "machin": [0, 2], "learn": 0, "acceler": 0, "physic": 0, "index": [0, 2], "search": 0, "page": 0, "submodul": 1, "camera": 1, "modul": 1, "baslercamera": [1, 2], "captur": [1, 2], "close": [1, 2], "demo_video": [1, 2], "enable_ptp": [1, 2], "get_info": [1, 2], "open": [1, 2], "ptp_statu": [1, 2], "set_camera_param": [1, 2], "synchron": [1, 2], "camera_registr": [1, 2], "initialize_ptp": [1, 2], "take_imag": [1, 2], "num_of_cameras_detect": [1, 2], "dmd": 1, "evalu": 1, "beam_param": [1, 2], "center_of_mass": [1, 2], "fit_2d_gaussian": [1, 2], "fit_gaussian": [1, 2], "gaussian": [1, 2], "gaussian_2d": [1, 2], "plot_gaussian_fit": [1, 2], "simul": 1, "cauchydistribut": [1, 2], "distribut": [1, 2], "updat": [1, 2], "pattern": [1, 2], "dynamicpattern": [1, 2], "append": [1, 2], "apply_distribut": [1, 2], "clear_canva": [1, 2], "get_imag": [1, 2], "plot_canva": [1, 2], "transform": [1, 2], "height": [1, 2], "width": [1, 2], "gaussiandistribut": [1, 2], "change_distribution_param": [1, 2], "generate_2d_gaussian": [1, 2], "maxwellboltzmanndistribut": [1, 2], "apply_transformation_matrix": [1, 2], "compile_transformation_matrix": [1, 2], "create_mosaic_imag": [1, 2], "macro_pixel": [1, 2], "pixel_value_remap": [1, 2], "transform_imag": [1, 2], "train": 1, "logger": [1, 2], "log_pars": [1, 2], "register_dataset": [1, 2], "register_extra": [1, 2], "register_model": [1, 2], "register_train": [1, 2], "save": [1, 2], "tf_model_summari": [1, 2], "plotpredictionimagecallback": [1, 2], "on_epoch_end": [1, 2], "plotpredictionparamscallback": [1, 2], "on_epoch_begin": [1, 2], "clean_tensor": [1, 2], "seperate_img": [1, 2], "split_dataset": [1, 2], "util": 1, "imageload": [1, 2], "load": [1, 2], "load_imag": [1, 2], "add_progress_bar": [1, 2], "apply_multiprocess": [1, 2], "combine_funct": [1, 2], "deprec": [1, 2], "deprecated_class": [1, 2], "get_all_file_path": [1, 2], "get_system_info": [1, 2], "image_norm": [1, 2], "is_jupyt": [1, 2], "minmax_norm": [1, 2], "preset_kwarg": [1, 2], "process_list_in_parallel": [1, 2], "rgb_to_grayscal": [1, 2], "scale_imag": [1, 2], "split_imag": [1, 2], "subtract_minimum": [1, 2], "visualpca": [1, 2], "create_gif": [1, 2], "fit": [1, 2], "plot_2d": [1, 2], "plot_3d": [1, 2], "plot_to_memori": [1, 2], "img_2_params_evalu": [1, 2], "plot_narrai": [1, 2], "plot_prediction_comparison": [1, 2], "content": 1, "class": 2, "instantcamera": 2, "param": 2, "dict": 2, "sourc": 2, "base": 2, "repres": 2, "basler": 2, "http": 2, "doc": 2, "baslerweb": 2, "com": 2, "precis": 2, "time": 2, "protocol": 2, "check": 2, "statu": 2, "ptp": 2, "clock": 2, "gener": 2, "ndarrai": 2, "none": 2, "an": 2, "us": 2, "return": 2, "arrai": 2, "type": 2, "np": 2, "after": 2, "releas": 2, "resourc": 2, "enabl": 2, "support": 2, "retriev": 2, "inform": 2, "about": 2, "A": 2, "dictionari": 2, "contain": 2, "detail": 2, "model": 2, "serial": 2, "number": 2, "etc": 2, "bool": 2, "true": 2, "fals": 2, "otherwis": 2, "reset": 2, "paramet": 2, "input": 2, "set": 2, "exposur": 2, "iso": 2, "abc": 2, "abstract": 2, "blueprint": 2, "oper": 2, "resolut": 2, "other": 2, "relev": 2, "list": 2, "object": 2, "handl": 2, "simultan": 2, "from": 2, "multipl": 2, "initi": 2, "all": 2, "them": 2, "detect": 2, "connect": 2, "comput": 2, "The": 2, "int": 2, "narrai": 2, "normal": 2, "singl": 2, "channel": 2, "beam": 2, "centroid": 2, "two": 2, "1d": 2, "ar": 2, "output": 2, "x": 2, "y": 2, "least": 2, "squar": 2, "scipi": 2, "org": 2, "refer": 2, "optim": 2, "curve_fit": 2, "html": 2, "mu": 2, "sigma": 2, "xy": 2, "x0": 2, "y0": 2, "sigma_x": 2, "sigma_i": 2, "plot": 2, "horizont": 2, "vertic": 2, "histogram": 2, "2d": 2, "numpi": 2, "canva": 2, "cauchi": 2, "defin": 2, "differ": 2, "arg": 2, "kwarg": 2, "": 2, "state": 2, "properti": 2, "current": 2, "128": 2, "manag": 2, "dynam": 2, "focus": 2, "onli": 2, "cmap": 2, "viridi": 2, "paus": 2, "0": 2, "01": 2, "callabl": 2, "appli": 2, "seri": 2, "final": 2, "need": 2, "have": 2, "method": 2, "implement": 2, "mean_x": 2, "float": 2, "5": 2, "mean_i": 2, "std_x": 2, "1": 2, "std_y": 2, "x_veloc": 2, "y_veloc": 2, "speed_momentum": 2, "9": 2, "rotation_radian": 2, "rotation_veloc": 2, "rotation_momentum": 2, "95": 2, "vol_scal": 2, "std_scale": 2, "rot_scal": 2, "rotat": 2, "center": 2, "around": 2, "mean": 2, "maxwel": 2, "boltzmann": 2, "transformation_matrix": 2, "3x3": 2, "matrix": 2, "translat": 2, "tupl": 2, "radian": 2, "scale_x": 2, "scale_i": 2, "size": 2, "1024": 2, "n": 2, "3": 2, "8": 2, "expand": 2, "macro": 2, "pixel": 2, "e": 2, "g": 2, "If": 2, "64x64": 2, "512x512": 2, "max_pixel_valu": 2, "255": 2, "rescal": 2, "valu": 2, "new": 2, "maximum": 2, "scale": 2, "opencv": 2, "accord": 2, "specifi": 2, "angl": 2, "degre": 2, "counterclockwis": 2, "factor": 2, "tx": 2, "ty": 2, "choic": 2, "custom": 2, "log_dir": 2, "dataset": 2, "histori": 2, "info": 2, "creat": 2, "folder": 2, "log": 2, "file": 2, "directori": 2, "experi": 2, "snapshot": 2, "under": 2, "extra_info": 2, "x_data": 2, "y_data": 2, "callback": 2, "predict": 2, "random": 2, "valid": 2, "m": 2, "speckl": 2, "p": 2, "q": 2, "epoch": 2, "titl": 2, "mmf": 2, "origin": 2, "ground": 2, "truth": 2, "reconstruct": 2, "call": 2, "end": 2, "subclass": 2, "should": 2, "overrid": 2, "ani": 2, "action": 2, "run": 2, "thi": 2, "function": 2, "dure": 2, "mode": 2, "integ": 2, "metric": 2, "perform": 2, "kei": 2, "prefix": 2, "val_": 2, "For": 2, "exampl": 2, "loss": 2, "2": 2, "accuraci": 2, "7": 2, "val_imag": 2, "val_label": 2, "val_beam_imag": 2, "l": 2, "start": 2, "pass": 2, "argument": 2, "mai": 2, "chang": 2, "futur": 2, "discard": 2, "some": 2, "problemat": 2, "calcul": 2, "In": 2, "develop": 2, "better": 2, "properli": 2, "temp": 2, "split": 2, "orign": 2, "later": 2, "assum": 2, "consist": 2, "both": 2, "label": 2, "proport": 2, "tensorflow": 2, "dimens": 2, "hight": 2, "NO": 2, "func": 2, "automat": 2, "decid": 2, "whether": 2, "image_path": 2, "path": 2, "sequenti": 2, "format": 2, "iterable_arg_index": 2, "decor": 2, "add": 2, "progress": 2, "bar": 2, "iter": 2, "multiprocess": 2, "which": 2, "compat": 2, "jupyt": 2, "notebook": 2, "could": 2, "select": 2, "ad": 2, "indic": 2, "No": 2, "can": 2, "termin": 2, "combin": 2, "through": 2, "each": 2, "where": 2, "ha": 2, "same": 2, "composit": 2, "empti": 2, "ident": 2, "reason": 2, "mark": 2, "dir": 2, "get": 2, "string": 2, "root": 2, "system": 2, "includ": 2, "version": 2, "processor": 2, "narray_img": 2, "its": 2, "rang": 2, "lab": 2, "command": 2, "line": 2, "arr": 2, "min": 2, "max": 2, "preset": 2, "keyword": 2, "first": 2, "rest": 2, "consid": 2, "tune": 2, "control": 2, "behavior": 2, "arbitrari": 2, "data_list": 2, "grayscal": 2, "averag": 2, "color": 2, "scaling_factor": 2, "given": 2, "scaled_imag": 2, "middl": 2, "subtract": 2, "minimum": 2, "element": 2, "n_compon": 2, "save_to": 2, "str": 2, "start_angl": 2, "end_angl": 2, "89": 2, "num": 2, "60": 2, "fp": 2, "30": 2, "revers": 2, "bytesio": 2, "true_label": 2, "pred_label": 2, "real": 2, "param_nam": 2}, "objects": {"": [[2, 0, 0, "-", "optibeam"]], "optibeam": [[2, 0, 0, "-", "camera"], [2, 0, 0, "-", "evaluation"], [2, 0, 0, "-", "simulation"], [2, 0, 0, "-", "training"], [2, 0, 0, "-", "utils"], [2, 0, 0, "-", "visualization"]], "optibeam.camera": [[2, 1, 1, "", "BaslerCamera"], [2, 1, 1, "", "Camera"], [2, 1, 1, "", "Synchronizer"], [2, 3, 1, "", "num_of_cameras_detected"]], "optibeam.camera.BaslerCamera": [[2, 2, 1, "", "capture"], [2, 2, 1, "", "close"], [2, 2, 1, "", "demo_video"], [2, 2, 1, "", "enable_ptp"], [2, 2, 1, "", "get_info"], [2, 2, 1, "", "open"], [2, 2, 1, "", "ptp_status"], [2, 2, 1, "", "set_camera_params"]], "optibeam.camera.Camera": [[2, 2, 1, "", "capture"], [2, 2, 1, "", "close"], [2, 2, 1, "", "enable_ptp"], [2, 2, 1, "", "get_info"], [2, 2, 1, "", "open"], [2, 2, 1, "", "ptp_status"], [2, 2, 1, "", "set_camera_params"]], "optibeam.camera.Synchronizer": [[2, 2, 1, "", "camera_registration"], [2, 2, 1, "", "initialize_ptp"], [2, 2, 1, "", "take_images"]], "optibeam.evaluation": [[2, 3, 1, "", "beam_params"], [2, 3, 1, "", "center_of_mass"], [2, 3, 1, "", "fit_2d_gaussian"], [2, 3, 1, "", "fit_gaussian"], [2, 3, 1, "", "gaussian"], [2, 3, 1, "", "gaussian_2d"], [2, 3, 1, "", "plot_gaussian_fit"]], "optibeam.simulation": [[2, 1, 1, "", "CauchyDistribution"], [2, 1, 1, "", "Distribution"], [2, 1, 1, "", "DynamicPatterns"], [2, 1, 1, "", "GaussianDistribution"], [2, 1, 1, "", "MaxwellBoltzmannDistribution"], [2, 3, 1, "", "apply_transformation_matrix"], [2, 3, 1, "", "compile_transformation_matrix"], [2, 3, 1, "", "create_mosaic_image"], [2, 3, 1, "", "macro_pixel"], [2, 3, 1, "", "pixel_value_remap"], [2, 3, 1, "", "transform_image"]], "optibeam.simulation.Distribution": [[2, 4, 1, "", "pattern"], [2, 2, 1, "", "update"]], "optibeam.simulation.DynamicPatterns": [[2, 2, 1, "", "append"], [2, 2, 1, "", "apply_distribution"], [2, 2, 1, "", "clear_canvas"], [2, 2, 1, "", "get_image"], [2, 4, 1, "", "height"], [2, 2, 1, "", "plot_canvas"], [2, 2, 1, "", "transform"], [2, 2, 1, "", "update"], [2, 4, 1, "", "width"]], "optibeam.simulation.GaussianDistribution": [[2, 2, 1, "", "change_distribution_params"], [2, 2, 1, "", "generate_2d_gaussian"], [2, 2, 1, "", "update"]], "optibeam.training": [[2, 1, 1, "", "Logger"], [2, 1, 1, "", "PlotPredictionImageCallback"], [2, 1, 1, "", "PlotPredictionParamsCallback"], [2, 3, 1, "", "clean_tensor"], [2, 3, 1, "", "seperate_img"], [2, 3, 1, "", "split_dataset"]], "optibeam.training.Logger": [[2, 2, 1, "", "log_parse"], [2, 2, 1, "", "register_dataset"], [2, 2, 1, "", "register_extra"], [2, 2, 1, "", "register_model"], [2, 2, 1, "", "register_training"], [2, 2, 1, "", "save"], [2, 2, 1, "", "tf_model_summary"], [2, 2, 1, "", "update"]], "optibeam.training.PlotPredictionImageCallback": [[2, 2, 1, "", "on_epoch_end"]], "optibeam.training.PlotPredictionParamsCallback": [[2, 2, 1, "", "on_epoch_begin"]], "optibeam.utils": [[2, 1, 1, "", "ImageLoader"], [2, 3, 1, "", "add_progress_bar"], [2, 3, 1, "", "apply_multiprocess"], [2, 3, 1, "", "apply_multiprocessing"], [2, 3, 1, "", "combine_functions"], [2, 3, 1, "", "deprecated"], [2, 3, 1, "", "deprecated_class"], [2, 3, 1, "", "get_all_file_paths"], [2, 3, 1, "", "get_system_info"], [2, 3, 1, "", "image_normalize"], [2, 3, 1, "", "is_jupyter"], [2, 3, 1, "", "minmax_normalization"], [2, 3, 1, "", "preset_kwargs"], [2, 3, 1, "", "process_list_in_parallel"], [2, 3, 1, "", "rgb_to_grayscale"], [2, 3, 1, "", "scale_image"], [2, 3, 1, "", "split_image"], [2, 3, 1, "", "subtract_minimum"]], "optibeam.utils.ImageLoader": [[2, 2, 1, "", "load"], [2, 2, 1, "", "load_image"], [2, 2, 1, "", "load_images"]], "optibeam.visualization": [[2, 3, 1, "", "img_2_params_evaluation"], [2, 3, 1, "", "plot_narray"], [2, 3, 1, "", "plot_prediction_comparison"], [2, 1, 1, "", "visualPCA"]], "optibeam.visualization.visualPCA": [[2, 2, 1, "", "create_gif"], [2, 2, 1, "", "fit"], [2, 2, 1, "", "plot_2d"], [2, 2, 1, "", "plot_3d"], [2, 2, 1, "", "plot_to_memory"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:property"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "property", "Python property"]}, "titleterms": {"welcom": 0, "optibeam": [0, 1, 2], "": 0, "document": 0, "modul": [0, 2], "indic": 0, "tabl": 0, "packag": 2, "submodul": 2, "camera": 2, "dmd": 2, "evalu": 2, "simul": 2, "train": 2, "util": 2, "visual": 2, "content": 2}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "sphinx": 60}, "alltitles": {"Welcome to OptiBeam\u2019s documentation!": [[0, "welcome-to-optibeam-s-documentation"]], "Modules": [[0, "modules"]], "Indices and tables": [[0, "indices-and-tables"]], "optibeam": [[1, "optibeam"]], "optibeam package": [[2, "optibeam-package"]], "Submodules": [[2, "submodules"]], "optibeam.camera module": [[2, "module-optibeam.camera"]], "optibeam.dmd module": [[2, "optibeam-dmd-module"]], "optibeam.evaluation module": [[2, "module-optibeam.evaluation"]], "optibeam.simulation module": [[2, "module-optibeam.simulation"]], "optibeam.training module": [[2, "module-optibeam.training"]], "optibeam.utils module": [[2, "module-optibeam.utils"]], "optibeam.visualization module": [[2, "module-optibeam.visualization"]], "Module contents": [[2, "module-optibeam"]]}, "indexentries": {"baslercamera (class in optibeam.camera)": [[2, "optibeam.camera.BaslerCamera"]], "camera (class in optibeam.camera)": [[2, "optibeam.camera.Camera"]], "cauchydistribution (class in optibeam.simulation)": [[2, "optibeam.simulation.CauchyDistribution"]], "distribution (class in optibeam.simulation)": [[2, "optibeam.simulation.Distribution"]], "dynamicpatterns (class in optibeam.simulation)": [[2, "optibeam.simulation.DynamicPatterns"]], "gaussiandistribution (class in optibeam.simulation)": [[2, "optibeam.simulation.GaussianDistribution"]], "imageloader (class in optibeam.utils)": [[2, "optibeam.utils.ImageLoader"]], "logger (class in optibeam.training)": [[2, "optibeam.training.Logger"]], "maxwellboltzmanndistribution (class in optibeam.simulation)": [[2, "optibeam.simulation.MaxwellBoltzmannDistribution"]], "plotpredictionimagecallback (class in optibeam.training)": [[2, "optibeam.training.PlotPredictionImageCallback"]], "plotpredictionparamscallback (class in optibeam.training)": [[2, "optibeam.training.PlotPredictionParamsCallback"]], "synchronizer (class in optibeam.camera)": [[2, "optibeam.camera.Synchronizer"]], "add_progress_bar() (in module optibeam.utils)": [[2, "optibeam.utils.add_progress_bar"]], "append() (optibeam.simulation.dynamicpatterns method)": [[2, "optibeam.simulation.DynamicPatterns.append"]], "apply_distribution() (optibeam.simulation.dynamicpatterns method)": [[2, "optibeam.simulation.DynamicPatterns.apply_distribution"]], "apply_multiprocess() (in module optibeam.utils)": [[2, "optibeam.utils.apply_multiprocess"]], "apply_multiprocessing() (in module optibeam.utils)": [[2, "optibeam.utils.apply_multiprocessing"]], "apply_transformation_matrix() (in module optibeam.simulation)": [[2, "optibeam.simulation.apply_transformation_matrix"]], "beam_params() (in module optibeam.evaluation)": [[2, "optibeam.evaluation.beam_params"]], "camera_registration() (optibeam.camera.synchronizer method)": [[2, "optibeam.camera.Synchronizer.camera_registration"]], "capture() (optibeam.camera.baslercamera method)": [[2, "optibeam.camera.BaslerCamera.capture"]], "capture() (optibeam.camera.camera method)": [[2, "optibeam.camera.Camera.capture"]], "center_of_mass() (in module optibeam.evaluation)": [[2, "optibeam.evaluation.center_of_mass"]], "change_distribution_params() (optibeam.simulation.gaussiandistribution method)": [[2, "optibeam.simulation.GaussianDistribution.change_distribution_params"]], "clean_tensor() (in module optibeam.training)": [[2, "optibeam.training.clean_tensor"]], "clear_canvas() (optibeam.simulation.dynamicpatterns method)": [[2, "optibeam.simulation.DynamicPatterns.clear_canvas"]], "close() (optibeam.camera.baslercamera method)": [[2, "optibeam.camera.BaslerCamera.close"]], "close() (optibeam.camera.camera method)": [[2, "optibeam.camera.Camera.close"]], "combine_functions() (in module optibeam.utils)": [[2, "optibeam.utils.combine_functions"]], "compile_transformation_matrix() (in module optibeam.simulation)": [[2, "optibeam.simulation.compile_transformation_matrix"]], "create_gif() (optibeam.visualization.visualpca method)": [[2, "optibeam.visualization.visualPCA.create_gif"]], "create_mosaic_image() (in module optibeam.simulation)": [[2, "optibeam.simulation.create_mosaic_image"]], "demo_video() (optibeam.camera.baslercamera method)": [[2, "optibeam.camera.BaslerCamera.demo_video"]], "deprecated() (in module optibeam.utils)": [[2, "optibeam.utils.deprecated"]], "deprecated_class() (in module optibeam.utils)": [[2, "optibeam.utils.deprecated_class"]], "enable_ptp() (optibeam.camera.baslercamera method)": [[2, "optibeam.camera.BaslerCamera.enable_ptp"]], "enable_ptp() (optibeam.camera.camera method)": [[2, "optibeam.camera.Camera.enable_ptp"]], "fit() (optibeam.visualization.visualpca method)": [[2, "optibeam.visualization.visualPCA.fit"]], "fit_2d_gaussian() (in module optibeam.evaluation)": [[2, "optibeam.evaluation.fit_2d_gaussian"]], "fit_gaussian() (in module optibeam.evaluation)": [[2, "optibeam.evaluation.fit_gaussian"]], "gaussian() (in module optibeam.evaluation)": [[2, "optibeam.evaluation.gaussian"]], "gaussian_2d() (in module optibeam.evaluation)": [[2, "optibeam.evaluation.gaussian_2d"]], "generate_2d_gaussian() (optibeam.simulation.gaussiandistribution method)": [[2, "optibeam.simulation.GaussianDistribution.generate_2d_gaussian"]], "get_all_file_paths() (in module optibeam.utils)": [[2, "optibeam.utils.get_all_file_paths"]], "get_image() (optibeam.simulation.dynamicpatterns method)": [[2, "optibeam.simulation.DynamicPatterns.get_image"]], "get_info() (optibeam.camera.baslercamera method)": [[2, "optibeam.camera.BaslerCamera.get_info"]], "get_info() (optibeam.camera.camera method)": [[2, "optibeam.camera.Camera.get_info"]], "get_system_info() (in module optibeam.utils)": [[2, "optibeam.utils.get_system_info"]], "height (optibeam.simulation.dynamicpatterns property)": [[2, "optibeam.simulation.DynamicPatterns.height"]], "image_normalize() (in module optibeam.utils)": [[2, "optibeam.utils.image_normalize"]], "img_2_params_evaluation() (in module optibeam.visualization)": [[2, "optibeam.visualization.img_2_params_evaluation"]], "initialize_ptp() (optibeam.camera.synchronizer method)": [[2, "optibeam.camera.Synchronizer.initialize_ptp"]], "is_jupyter() (in module optibeam.utils)": [[2, "optibeam.utils.is_jupyter"]], "load() (optibeam.utils.imageloader method)": [[2, "optibeam.utils.ImageLoader.load"]], "load_image() (optibeam.utils.imageloader method)": [[2, "optibeam.utils.ImageLoader.load_image"]], "load_images() (optibeam.utils.imageloader method)": [[2, "optibeam.utils.ImageLoader.load_images"]], "log_parse() (optibeam.training.logger method)": [[2, "optibeam.training.Logger.log_parse"]], "macro_pixel() (in module optibeam.simulation)": [[2, "optibeam.simulation.macro_pixel"]], "minmax_normalization() (in module optibeam.utils)": [[2, "optibeam.utils.minmax_normalization"]], "module": [[2, "module-optibeam"], [2, "module-optibeam.camera"], [2, "module-optibeam.evaluation"], [2, "module-optibeam.simulation"], [2, "module-optibeam.training"], [2, "module-optibeam.utils"], [2, "module-optibeam.visualization"]], "num_of_cameras_detected() (in module optibeam.camera)": [[2, "optibeam.camera.num_of_cameras_detected"]], "on_epoch_begin() (optibeam.training.plotpredictionparamscallback method)": [[2, "optibeam.training.PlotPredictionParamsCallback.on_epoch_begin"]], "on_epoch_end() (optibeam.training.plotpredictionimagecallback method)": [[2, "optibeam.training.PlotPredictionImageCallback.on_epoch_end"]], "open() (optibeam.camera.baslercamera method)": [[2, "optibeam.camera.BaslerCamera.open"]], "open() (optibeam.camera.camera method)": [[2, "optibeam.camera.Camera.open"]], "optibeam": [[2, "module-optibeam"]], "optibeam.camera": [[2, "module-optibeam.camera"]], "optibeam.evaluation": [[2, "module-optibeam.evaluation"]], "optibeam.simulation": [[2, "module-optibeam.simulation"]], "optibeam.training": [[2, "module-optibeam.training"]], "optibeam.utils": [[2, "module-optibeam.utils"]], "optibeam.visualization": [[2, "module-optibeam.visualization"]], "pattern (optibeam.simulation.distribution property)": [[2, "optibeam.simulation.Distribution.pattern"]], "pixel_value_remap() (in module optibeam.simulation)": [[2, "optibeam.simulation.pixel_value_remap"]], "plot_2d() (optibeam.visualization.visualpca method)": [[2, "optibeam.visualization.visualPCA.plot_2d"]], "plot_3d() (optibeam.visualization.visualpca method)": [[2, "optibeam.visualization.visualPCA.plot_3d"]], "plot_canvas() (optibeam.simulation.dynamicpatterns method)": [[2, "optibeam.simulation.DynamicPatterns.plot_canvas"]], "plot_gaussian_fit() (in module optibeam.evaluation)": [[2, "optibeam.evaluation.plot_gaussian_fit"]], "plot_narray() (in module optibeam.visualization)": [[2, "optibeam.visualization.plot_narray"]], "plot_prediction_comparison() (in module optibeam.visualization)": [[2, "optibeam.visualization.plot_prediction_comparison"]], "plot_to_memory() (optibeam.visualization.visualpca method)": [[2, "optibeam.visualization.visualPCA.plot_to_memory"]], "preset_kwargs() (in module optibeam.utils)": [[2, "optibeam.utils.preset_kwargs"]], "process_list_in_parallel() (in module optibeam.utils)": [[2, "optibeam.utils.process_list_in_parallel"]], "ptp_status() (optibeam.camera.baslercamera method)": [[2, "optibeam.camera.BaslerCamera.ptp_status"]], "ptp_status() (optibeam.camera.camera method)": [[2, "optibeam.camera.Camera.ptp_status"]], "register_dataset() (optibeam.training.logger method)": [[2, "optibeam.training.Logger.register_dataset"]], "register_extra() (optibeam.training.logger method)": [[2, "optibeam.training.Logger.register_extra"]], "register_model() (optibeam.training.logger method)": [[2, "optibeam.training.Logger.register_model"]], "register_training() (optibeam.training.logger method)": [[2, "optibeam.training.Logger.register_training"]], "rgb_to_grayscale() (in module optibeam.utils)": [[2, "optibeam.utils.rgb_to_grayscale"]], "save() (optibeam.training.logger method)": [[2, "optibeam.training.Logger.save"]], "scale_image() (in module optibeam.utils)": [[2, "optibeam.utils.scale_image"]], "seperate_img() (in module optibeam.training)": [[2, "optibeam.training.seperate_img"]], "set_camera_params() (optibeam.camera.baslercamera method)": [[2, "optibeam.camera.BaslerCamera.set_camera_params"]], "set_camera_params() (optibeam.camera.camera method)": [[2, "optibeam.camera.Camera.set_camera_params"]], "split_dataset() (in module optibeam.training)": [[2, "optibeam.training.split_dataset"]], "split_image() (in module optibeam.utils)": [[2, "optibeam.utils.split_image"]], "subtract_minimum() (in module optibeam.utils)": [[2, "optibeam.utils.subtract_minimum"]], "take_images() (optibeam.camera.synchronizer method)": [[2, "optibeam.camera.Synchronizer.take_images"]], "tf_model_summary() (optibeam.training.logger method)": [[2, "optibeam.training.Logger.tf_model_summary"]], "transform() (optibeam.simulation.dynamicpatterns method)": [[2, "optibeam.simulation.DynamicPatterns.transform"]], "transform_image() (in module optibeam.simulation)": [[2, "optibeam.simulation.transform_image"]], "update() (optibeam.simulation.distribution method)": [[2, "optibeam.simulation.Distribution.update"]], "update() (optibeam.simulation.dynamicpatterns method)": [[2, "optibeam.simulation.DynamicPatterns.update"]], "update() (optibeam.simulation.gaussiandistribution method)": [[2, "optibeam.simulation.GaussianDistribution.update"]], "update() (optibeam.training.logger method)": [[2, "optibeam.training.Logger.update"]], "visualpca (class in optibeam.visualization)": [[2, "optibeam.visualization.visualPCA"]], "width (optibeam.simulation.dynamicpatterns property)": [[2, "optibeam.simulation.DynamicPatterns.width"]]}})